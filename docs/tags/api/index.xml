<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>api on LambdaStack</title>
    <link>https://lambdastack.io/tags/api/</link>
    <description>Recent content in api on LambdaStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Feb 2017 01:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://lambdastack.io/tags/api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SLA - Availability or Durability</title>
      <link>https://lambdastack.io/blog/2017/02/27/sla/</link>
      <pubDate>Mon, 27 Feb 2017 01:00:00 +0200</pubDate>
      
      <guid>https://lambdastack.io/blog/2017/02/27/sla/</guid>
      <description>SLA - Availability or Durability I seem to be getting more questions lately like, &amp;ldquo;how many 9s is your object store?&amp;rdquo; or &amp;ldquo;how do you calculate 9s?&amp;rdquo;. The questions need to be narrowed down since those are very broad. For example, when dealing with storage like an object store, there are two types of &amp;ldquo;9s&amp;rdquo;. One for durability and one for availability. If you look at AWS S3, they put on their primary site 11 9s of durability which is very good.</description>
    </item>
    
    <item>
      <title>Klaus - Hybrid WebStack</title>
      <link>https://lambdastack.io/blog/2017/01/15/klaus/</link>
      <pubDate>Sun, 15 Jan 2017 15:00:00 +0200</pubDate>
      
      <guid>https://lambdastack.io/blog/2017/01/15/klaus/</guid>
      <description>There are very good Web Servers on the market, Apache and NGINX to name a few. However, to interface your backend code you need to use Apache modules or WSGI/FastCGI with NGINX (depending on your language of choice). To actually use a fully integrated environment you need to use something like Django or Tornado for Python. For GO there is a small built-in web server that allows you to build up a more robust environment around it.</description>
    </item>
    
  </channel>
</rss>